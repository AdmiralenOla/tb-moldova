#!/usr/bin/python/env

'''Script to convert GATK TAB-separated file to a basic VCF.
Structure of GATK file is like a spreadsheet: First row is coordinates,
subsequent rows are individual isolates and their call (A/C/G/T)'''

import sys
from Bio import SeqIO

# RESDIC STRUCTURE
# Coord1 = {Iso1: 'A',Iso2: 'T'}

def findalt(mydict,c, isolates):
	'''Given a dictionary for a single coordinate, find out what is the REF base and what is the ALT base.'''
	# Begin by finding all unique values (For the ALT field)
	REF = mydict['REF']
	uniqvalues = set(mydict.values())
	uniqvalues.remove(REF)
	#if 'N' in uniqvalues:
	#	uniqvalues.remove('N')
	# Now, get the actual alts in correct order
	selectfrom = [mydict['REF']] + list(uniqvalues)
	altstring = []
	for i in isolates:
		allele = selectfrom.index(mydict[i])
		altstring += ['%s/%s' % (allele, allele)]

	return (",".join(uniqvalues), altstring)


CHROM = 'gi|448814763|ref|NC_000962.3|'

with open(sys.argv[3], 'rU') as reffile:
	ref = SeqIO.read(reffile,'fasta')


with open(sys.argv[1],'rU') as infile:
	with open(sys.argv[2],'w') as outfile:
		
		fullfile = list(infile)
		coords = fullfile[0].rstrip('\n').split(' ')
		isolates = []
		resdic = {x:{ } for x in coords }
		# coords contains all the coordinates in correct order
		for line in fullfile[1:]: #coord in coords:
			#resdic[coord]['REF'] = ref.seq[coords[line]]
			#refbase = ref.seq[coords[line]
			
			linebroken = line.split(' ')
			linename = linebroken[0]
			lineseq = linebroken[1:]
			isolates += [linename]
			for coord in range(len(coords)):
				#resdic[coords[coord]][]
				try:
					resdic[coords[coord]][linename] = lineseq[coord].rstrip("\n")
				except IndexError:
					print(coord,coords[coord], linename)
					sys.exit()
		# Finally, get the sequence for REF
		for coord in range(len(coords)):
			try:
				resdic[coords[coord]]['REF'] = ref.seq[int(coords[coord])]
			except TypeError:
				print(coord, coords[coord])

		
		# Now that the complete dictionary exist, write to file.
		outfile.write("##fileformat=VCFv4.2\n")
		outfile.write('##NOTE="Generated by tab_to_vcf.py script. Not a proper VCF file"\n')
		outfile.write('\t'.join(['#CHROM', 'POS','ID','REF','ALT','QUAL','FILTER','INFO','FORMAT'] + isolates)+'\n')
		for c in coords:
			alt, altstring = findalt(resdic[c],c, isolates)
			# Not finished, placeholder
			thisline = [CHROM, c, '.', resdic[c]['REF'],alt, '255.00','PASS','.','GT'] + altstring
				#thisline = [CHROM,coords[line],'.',ref.seq[coords[line]],
			outfile.write('\t'.join(thisline) + '\n')





		#CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO	FORMAT